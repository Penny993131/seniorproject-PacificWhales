@model Harmony.Models.VenueOwnerDetailViewModel
@using CalendarData = Google.Apis.Calendar.v3.Data;
@{
    ViewBag.Title = "Details";
}



<div class="container black-font">
    <h4 style="color:seashell">Venue Owner Profile</h4>
    <hr />
    <div class="row" id="venueprofile">
        <div class="col-md-4">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.FirstName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.FirstName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.TypeName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.TypeName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.VenueName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.VenueName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.AddressLine1)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.AddressLine1)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.AddressLine2)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.AddressLine2)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.City)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.City)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.State)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.State)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ZipCode)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ZipCode)
                </dd>

            </dl>
        </div>
        <div class="col-md-8">
            <h4><strong>Profile Picture</strong></h4>
            <div>
                <img src="~/venue.jpg" id="venuepic" />
            </div>


        </div>
        <!------------------------------- HELPERS FOR FORMATTING EVENTS -------------------------------->
        @helper FormatEventTime(CalendarData.EventDateTime when)
        {
            // Either Date or DateTime is set, depending on whether or not the event is
            // an all-day event.
            if (when.DateTime == null)
            {
                <text>All day</text>
            }
            else
            {
                @:@when.DateTime.Value.ToShortTimeString()
            }
        }
        @helper FormatEventLength(CalendarData.EventDateTime start, CalendarData.EventDateTime end)
        {
            var duration = end.DateTime - start.DateTime;
            if (duration == null)
            {
                <text>All day</text>
            }
            else
            {
                @:@string.Format(
        "{0} hour{1} {2} minute{3}",
        (int)duration.Value.TotalHours,
        duration.Value.TotalHours >= 2 ? "s" : "",
        (int)duration.Value.Minutes,
        duration.Value.Minutes >= 2 ? "s" : "")
            }
        }

        <div class="col-md-4">
            <h5>Availability</h5>
            <table>
                <tr>
                    <th>Event</th>
                    <th>Date</th>
                    <th>Duration</th>
                </tr>

                <!----------------------- DISPLAYING EVENTS ------------------------>
                @foreach (var group in Model.UpcomingEvents)
                {
                    foreach (var evt in group.Events)
                    {
                        <tr>
                            <td>@evt.Summary</td>
                            <td>@FormatEventTime(evt.Start)</td>
                            <td>@FormatEventLength(evt.Start, evt.End)</td>
                        </tr>
                    }

                }
            </table>
        </div>
        <br />
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
            @Html.ActionLink("Back to List", "Index")
        </p>
    </div>
