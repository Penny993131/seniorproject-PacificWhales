@model Harmony.Models.MusicianDetailViewModel
@using CalendarData = Google.Apis.Calendar.v3.Data;
@{
    ViewBag.Title = "Details";
}

<div class="container black-font">
    <h4 style="color:seashell">Musician Profile Page</h4>
    <hr />
    <div class="row" id="musicianprofile">
        <div class="col-md-4">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.FirstName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.FirstName)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.LastName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.LastName)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.City)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.City)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.State)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.State)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Email)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Email)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Description)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Description)
                </dd>
            </dl>
        </div>
        <div class="col-md-8">
            <h4><strong>Profile Picture</strong></h4>
            <div>
                <img src="~/singer.jpg" id="musicianprofilepic" />
            </div>
        </div>

        <!------------------------------- HELPERS FOR FORMATTING EVENTS -------------------------------->
        @helper FormatEventTime(CalendarData.EventDateTime when)
        {
        // Either Date or DateTime is set, depending on whether or not the event is
        // an all-day event.
        if (when.DateTime == null)
        {
        <text>All day</text>
        }
        else
        {
        @:@when.DateTime.Value.ToShortTimeString()
        }
        }
        @helper FormatEventLength(CalendarData.EventDateTime start, CalendarData.EventDateTime end)
        {
            var duration = end.DateTime - start.DateTime;
            if (duration == null)
            {
                <text>All day</text>
            }
            else
            {
                @:@string.Format(
            "{0} hour{1} {2} minute{3}",
            (int)duration.Value.TotalHours,
            duration.Value.TotalHours >= 2 ? "s" : "",
            (int)duration.Value.Minutes,
            duration.Value.Minutes >= 2 ? "s" : "")
            }
        }

    <div class="col-md-4">
        <h5>Availability</h5>
        <table>
            <tr>
                <th>Event</th>
                <th>Date</th>
                <th>Duration</th>
            </tr>

            <!-------------------------- DISPLAYING EVENTS ----------------------->
            @foreach (var group in Model.UpcomingEvents)
            {
                foreach (var evt in group.Events)
                {
                    <tr>
                        <td>@evt.Summary</td>
                        <td>@FormatEventTime(evt.Start)</td>
                        <td>@FormatEventLength(evt.Start, evt.End)</td>
                    </tr>
                }

            }
        </table>
    </div>
        <br />
    </div>
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
        @Html.ActionLink("Back to List", "Index")
    </p>
</div>